{"version":3,"sources":["components/CurrencySelectItem.js","components/AppForm.js","components/ChangeButton.js","components/ConvertButton.js","components/Info.js","components/App.js","index.js"],"names":["CurrencySelectItem","currencies","value","setValue","setConvertionObjectLoaded","objectArr","Object","keys","sort","map","key","label","styles","control","height","borderRadius","placeholder","options","onChange","e","handleOnChange","AppForm","from","to","setFrom","setTo","fromAmount","setFromAmount","calculateConvertion","convertion","Form","onSubmit","preventDefault","Row","Col","className","xs","sm","Control","type","min","target","readOnly","ChangeButton","Button","onClick","helper","variant","style","width","ConvertButton","apiKey","setConvertURL","Info","Values","Name","substring","toFixed","currenciesURL","App","useState","setCurrencies","convertionObject","setConvertionObject","convertionObjectLoaded","currenciesLoaded","setCurrenciesLoaded","setConvertion","convertURL","error","setError","isInitalMount","useRef","objNameArr","item","objValuesArr","values","useEffect","fetch","then","res","ok","json","Error","status","result","catch","toString","current","convertionCount","i","length","componentForm","results","componentChangeButton","componentInfo","componentConvertButton","Container","fluid","maxWidth","minWidth","md","xl","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVAqCeA,EAlCY,SAAC,GAKrB,IAJLC,EAII,EAJJA,WACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAC,EACI,EADJA,0BAEMC,EAAYC,OAAOC,KAAKN,GAC3BO,OACAC,KAAI,SAACC,GAAD,MAAU,CAAER,MAAOQ,EAAKC,MAAOD,MAEhCE,EAAS,CACbC,QAAS,SAACD,GAAD,mBAAC,eACLA,GADI,IAEPE,OAAQ,YACRC,aAAc,aASlB,OACE,cAAC,IAAD,CACEb,MAAOA,EACPc,YAAad,EACbe,QAASZ,EACTa,SAAU,SAACC,GAAD,OAVS,SAACA,GACtBf,GAA0B,GAC1BD,EAASgB,EAAEjB,OAQQkB,CAAeD,IAChCP,OAAQA,KC0BCS,G,MArDC,SAAC,GAWV,IAVLpB,EAUI,EAVJA,WACAqB,EASI,EATJA,KACAC,EAQI,EARJA,GACAC,EAOI,EAPJA,QACAC,EAMI,EANJA,MACAC,EAKI,EALJA,WACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,oBACAxB,EAEI,EAFJA,0BACAyB,EACI,EADJA,WAMA,OACE,cAACC,EAAA,EAAD,CAAMC,SALa,SAACZ,GACpBA,EAAEa,kBAIF,SACE,eAACF,EAAA,EAAKG,IAAN,WACE,cAACC,EAAA,EAAD,CAAKC,UAAU,oBAAoBC,GAAG,KAAKC,GAAG,IAA9C,SACE,cAACP,EAAA,EAAKQ,QAAN,CACEC,KAAK,SACLrC,MAAOwB,EACPc,IAAK,EACLtB,SAAU,SAACC,GAAD,OAAOQ,EAAcR,EAAEsB,OAAOvC,YAG5C,cAACgC,EAAA,EAAD,CAAKC,UAAU,oBAAoBC,GAAG,KAAKC,GAAG,IAA9C,SACE,cAAC,EAAD,CACEjC,0BAA2BA,EAC3BH,WAAYA,EACZC,MAAOoB,EACPnB,SAAUqB,EACVN,SAAU,kBAAMU,SAGpB,cAACM,EAAA,EAAD,CAAKC,UAAU,oBAAoBC,GAAG,KAAKC,GAAG,IAA9C,SACE,cAACP,EAAA,EAAKQ,QAAN,CAAcC,KAAK,OAAOrC,MAAO2B,EAAYa,UAAQ,MAEvD,cAACR,EAAA,EAAD,CAAKC,UAAU,oBAAoBC,GAAG,KAAKC,GAAG,IAA9C,SACE,cAAC,EAAD,CACEjC,0BAA2BA,EAC3BH,WAAYA,EACZC,MAAOqB,EACPpB,SAAUsB,EACVP,SAAU,kBAAMU,gB,wBC3Bbe,G,MAlBM,SAAC,GAAkC,IAAhCrB,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAMzC,OACE,cAACmB,EAAA,EAAD,CACEC,QAPkB,WACpB,IAAIC,EAASxB,EACbE,EAAQD,GACRE,EAAMqB,IAKJC,QAAQ,QACRZ,UAAU,mBACVa,MAAO,CAAEC,MAAO,aAJlB,SAME,cAAC,IAAD,CAAad,UAAU,aCQde,G,MAtBO,SAAC,GAMhB,IALLC,EAKI,EALJA,OACA7B,EAII,EAJJA,KACAC,EAGI,EAHJA,GACAK,EAEI,EAFJA,oBACAwB,EACI,EADJA,cAEA,OACE,cAACR,EAAA,EAAD,CACEC,QAAS,WACPjB,IACAwB,EAAc,8CAAD,OACmC9B,EADnC,YAC2CC,EAD3C,YACiDA,EADjD,YACuDD,EADvD,iCACoF6B,KAGnGJ,QAAQ,OAPV,uBCYWM,EArBF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQhC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,GAAIgC,EAAW,EAAXA,KAChC,OACE,eAACrB,EAAA,EAAD,CAAKC,UAAU,cAAf,UACE,oBAAGA,UAAU,OAAb,eACKb,EADL,KACa,IACVA,IAASiC,EAAK,GAAGC,UAAU,EAAG,GAC3BF,EAAO,GAAGG,QAAQ,GAClBH,EAAO,GAAGG,QAAQ,GAAI,IACzBlC,KAEH,mCACKA,EADL,KACW,IACRD,IAASiC,EAAK,GAAGC,UAAU,EAAG,GAC3BF,EAAO,GAAGG,QAAQ,GAClBH,EAAO,GAAGG,QAAQ,GAAI,IACzBnC,SCVH6B,EAAS,uBACTO,EAAa,6DAAyDP,GAwJ7DQ,EAtJH,WAAO,IAAD,EACQC,mBAAS,OADjB,mBACTtC,EADS,KACHE,EADG,OAEIoC,mBAAS,OAFb,mBAETrC,EAFS,KAELE,EAFK,OAGoBmC,mBAAS,IAH7B,mBAGT3D,EAHS,KAGG4D,EAHH,OAIgCD,mBAAS,IAJzC,mBAITE,EAJS,KAISC,EAJT,OAK4CH,oBAAS,GALrD,mBAKTI,EALS,KAKe5D,EALf,OAMgCwD,oBAAS,GANzC,mBAMTK,EANS,KAMSC,EANT,OAOoBN,mBAAS,GAP7B,mBAOTlC,EAPS,KAOGC,EAPH,OAQoBiC,mBAAS,GAR7B,mBAQT/B,EARS,KAQGsC,EARH,OASoBP,mBAAS,IAT7B,mBASTQ,EATS,KASGhB,EATH,OAUUQ,mBAAS,cAVnB,mBAUTS,EAVS,KAUFC,EAVE,KAYVC,EAAgBC,kBAAO,GAEzBC,EAAaT,EACb1D,OAAOC,KAAKuD,GAAkBrD,KAAI,SAACiE,GAAD,OAAUA,KAC5C,GACAC,GAAeX,EACf1D,OAAOsE,OAAOd,GAAkBrD,KAAI,SAACiE,GAAD,OAAUA,KAC9C,GAEJG,qBAAU,WACRC,MAAMpB,GACHqB,MAAK,SAACC,GACL,GAAKA,EAAIC,GACJ,OAAOD,EAAIE,OADH,MAAM,IAAIC,MAAMH,EAAII,WAGlCL,MAAK,SAACM,GACLxB,EAAcwB,GACdnB,GAAoB,MAErBoB,OAAM,SAACjB,GACmB,eAArBA,EAAMkB,WACRjB,EAAS,mEAGJA,EAASD,EAAMkB,iBAEzB,IAEHV,qBAAU,WACJN,EAAciB,QAChBjB,EAAciB,SAAU,EAExBV,MAAMV,GACHW,KAAK3E,GAA0B,IAC/B2E,MAAK,SAACC,GACL,GAAKA,EAAIC,GACJ,OAAOD,EAAIE,OADH,MAAM,IAAIC,MAAMH,EAAII,WAGlCL,MAAK,SAACM,GACLtB,EAAoBsB,GACpBjF,GAA0B,MAE3BkF,OAAM,SAACjB,GACmB,eAArBA,EAAMkB,WACRjB,EAAS,mEAGJA,EAASD,EAAMkB,iBAG3B,CAACnB,IAGJ,IAAMxC,GAAsB,WAG1B,IAFA,IAAI6D,EAAkB,EAEbC,EAAI,EAAGA,EAAIjB,EAAWkB,OAAQD,IACjCjB,EAAWiB,KAAX,UAAqBpE,EAArB,YAA6BC,KAC/BkE,EAAkBd,GAAae,IAInCvB,GAAezC,EAAa+D,GAAiBhC,QAAQ,KAGvDoB,qBAAU,WACRjD,OACC,CAACA,KAEJ,IAAMgE,GAAgB3B,EACpB,cAAC,EAAD,CACEhE,WAAYA,EAAW4F,QACvBvE,KAAMA,EACNC,GAAIA,EACJC,QAASA,EACTC,MAAOA,EACPC,WAAYA,EACZtB,0BAA2BA,EAC3BuB,cAAeA,EACfC,oBAAqBA,GACrBC,WAAYA,IAGd,6BAAKwC,IAGDyB,GAAwB7B,EAC5B,cAAC,EAAD,CAAc3C,KAAMA,EAAMC,GAAIA,EAAIC,QAASA,EAASC,MAAOA,IACzD,KAEEsE,GAAgB/B,EACpB,cAAC,EAAD,CAAMV,OAAQqB,GAAcpB,KAAMkB,EAAYnD,KAAMA,EAAMC,GAAIA,IAC5D,KAEEyE,GAAyB/B,EAC7B,cAAC,EAAD,CACEd,OAAQA,EACR7B,KAAMA,EACNC,GAAIA,EACJK,oBAAqBA,GACrBwB,cAAeA,IAEf,KAEJ,OACE,cAAC6C,EAAA,EAAD,CAAW9D,UAAU,WAAW+D,OAAK,EAArC,SACE,cAACjE,EAAA,EAAD,CAAKE,UAAU,WAAf,SACE,eAACD,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAACF,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,UAAU,mBAAf,SACE,wDAGJ,eAACF,EAAA,EAAD,CAAKE,UAAU,8BAAf,UACE,cAACD,EAAA,EAAD,CACEc,MAAO,CAAEmD,SAAU,UAAWC,SAAU,WACxChE,GAAG,IACHC,GAAG,IACHgE,GAAG,IACHC,GAAG,IACHnE,UAAU,aANZ,SAQGyD,KAEH,cAAC1D,EAAA,EAAD,CAAKC,UAAU,eAAeC,GAAG,OAAjC,SACG0D,QAGL,cAAC7D,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,UAAU,mBAAf,SAAmC6D,OAErC,cAAC/D,EAAA,EAAD,UAAM8D,a,MCpJhBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5709aa44.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nconst CurrencySelectItem = ({\r\n  currencies,\r\n  value,\r\n  setValue,\r\n  setConvertionObjectLoaded,\r\n}) => {\r\n  const objectArr = Object.keys(currencies)\r\n    .sort()\r\n    .map((key) => ({ value: key, label: key }));\r\n\r\n  const styles = {\r\n    control: (styles) => ({\r\n      ...styles,\r\n      height: \"2.3125rem\",\r\n      borderRadius: \".25rem\",\r\n    }),\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setConvertionObjectLoaded(false);\r\n    setValue(e.value);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      value={value}\r\n      placeholder={value}\r\n      options={objectArr}\r\n      onChange={(e) => handleOnChange(e)}\r\n      styles={styles}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CurrencySelectItem;\r\n","import React from \"react\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\nimport CurrencySelectItem from \"./CurrencySelectItem\";\r\nimport \"../css/AppForm.css\";\r\n\r\nconst AppForm = ({\r\n  currencies,\r\n  from,\r\n  to,\r\n  setFrom,\r\n  setTo,\r\n  fromAmount,\r\n  setFromAmount,\r\n  calculateConvertion,\r\n  setConvertionObjectLoaded,\r\n  convertion,\r\n}) => {\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Row>\r\n        <Col className=\"m-0 mb-1 p-0 pr-1\" xs=\"12\" sm=\"6\">\r\n          <Form.Control\r\n            type=\"number\"\r\n            value={fromAmount}\r\n            min={0}\r\n            onChange={(e) => setFromAmount(e.target.value)}\r\n          />\r\n        </Col>\r\n        <Col className=\"m-0 mb-1 p-0 pr-1\" xs=\"12\" sm=\"6\">\r\n          <CurrencySelectItem\r\n            setConvertionObjectLoaded={setConvertionObjectLoaded}\r\n            currencies={currencies}\r\n            value={from}\r\n            setValue={setFrom}\r\n            onChange={() => calculateConvertion()}\r\n          />\r\n        </Col>\r\n        <Col className=\"m-0 mb-1 p-0 pr-1\" xs=\"12\" sm=\"6\">\r\n          <Form.Control type=\"text\" value={convertion} readOnly />\r\n        </Col>\r\n        <Col className=\"m-0 mb-1 p-0 pr-1\" xs=\"12\" sm=\"6\">\r\n          <CurrencySelectItem\r\n            setConvertionObjectLoaded={setConvertionObjectLoaded}\r\n            currencies={currencies}\r\n            value={to}\r\n            setValue={setTo}\r\n            onChange={() => calculateConvertion()}\r\n          />\r\n        </Col>\r\n      </Form.Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AppForm;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { ArrowDownUp } from \"react-bootstrap-icons\";\r\nimport \"../css/ChangeButton.css\";\r\n\r\nconst ChangeButton = ({ from, to, setFrom, setTo }) => {\r\n  const handleOnClick = () => {\r\n    let helper = from;\r\n    setFrom(to);\r\n    setTo(helper);\r\n  };\r\n  return (\r\n    <Button\r\n      onClick={handleOnClick}\r\n      variant=\"light\"\r\n      className=\"changeButton p-0\"\r\n      style={{ width: \"2.3125rem\" }}\r\n    >\r\n      <ArrowDownUp className=\"pb-2\" />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ChangeButton;\r\n","import React from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"../css/ConvertButton.css\";\r\n\r\nconst ConvertButton = ({\r\n  apiKey,\r\n  from,\r\n  to,\r\n  calculateConvertion,\r\n  setConvertURL,\r\n}) => {\r\n  return (\r\n    <Button\r\n      onClick={() => {\r\n        calculateConvertion();\r\n        setConvertURL(\r\n          `https://free.currconv.com/api/v7/convert?q=${from}_${to},${to}_${from}&compact=ultra&apiKey=${apiKey}`\r\n        );\r\n      }}\r\n      variant=\"dark\"\r\n    >\r\n      Convert\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default ConvertButton;\r\n","import React from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\n\r\nconst Info = ({ Values, from, to, Name }) => {\r\n  return (\r\n    <Col className=\"text-center\">\r\n      <p className=\"mb-0\">\r\n        1 {from} ={\" \"}\r\n        {from === Name[0].substring(0, 3)\r\n          ? Values[0].toFixed(2)\r\n          : Values[1].toFixed(2)}{\" \"}\r\n        {to}\r\n      </p>\r\n      <p>\r\n        1 {to} ={\" \"}\r\n        {from === Name[1].substring(0, 3)\r\n          ? Values[0].toFixed(2)\r\n          : Values[1].toFixed(2)}{\" \"}\r\n        {from}\r\n      </p>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Container, Col, Row } from \"react-bootstrap\";\r\nimport Form from \"./AppForm\";\r\nimport \"../css/App.css\";\r\nimport ChangeButton from \"./ChangeButton\";\r\nimport ConvertButton from \"./ConvertButton\";\r\nimport Info from \"./Info\";\r\n\r\nconst apiKey = \"75603abb0998080373c2\";\r\nconst currenciesURL = `https://free.currconv.com/api/v7/currencies?apiKey=${apiKey}`;\r\n\r\nconst App = () => {\r\n  const [from, setFrom] = useState(\"EUR\");\r\n  const [to, setTo] = useState(\"PLN\");\r\n  const [currencies, setCurrencies] = useState({});\r\n  const [convertionObject, setConvertionObject] = useState({});\r\n  const [convertionObjectLoaded, setConvertionObjectLoaded] = useState(false);\r\n  const [currenciesLoaded, setCurrenciesLoaded] = useState(false);\r\n  const [fromAmount, setFromAmount] = useState(0);\r\n  const [convertion, setConvertion] = useState(0);\r\n  const [convertURL, setConvertURL] = useState(\"\");\r\n  const [error, setError] = useState(\"Loading...\");\r\n\r\n  const isInitalMount = useRef(true);\r\n\r\n  let objNameArr = convertionObjectLoaded\r\n    ? Object.keys(convertionObject).map((item) => item)\r\n    : \"\";\r\n  let objValuesArr = convertionObjectLoaded\r\n    ? Object.values(convertionObject).map((item) => item)\r\n    : \"\";\r\n\r\n  useEffect(() => {\r\n    fetch(currenciesURL)\r\n      .then((res) => {\r\n        if (!res.ok) throw new Error(res.status);\r\n        else return res.json();\r\n      })\r\n      .then((result) => {\r\n        setCurrencies(result);\r\n        setCurrenciesLoaded(true);\r\n      })\r\n      .catch((error) => {\r\n        if (error.toString() === \"Error: 400\") {\r\n          setError(\r\n            `Sorry... Free API limit reached, try again later (up to 1 hour)`\r\n          );\r\n        } else setError(error.toString());\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isInitalMount.current) {\r\n      isInitalMount.current = false;\r\n    } else {\r\n      fetch(convertURL)\r\n        .then(setConvertionObjectLoaded(false))\r\n        .then((res) => {\r\n          if (!res.ok) throw new Error(res.status);\r\n          else return res.json();\r\n        })\r\n        .then((result) => {\r\n          setConvertionObject(result);\r\n          setConvertionObjectLoaded(true);\r\n        })\r\n        .catch((error) => {\r\n          if (error.toString() === \"Error: 400\") {\r\n            setError(\r\n              `Sorry... Free API limit reached, try again later (up to 1 hour)`\r\n            );\r\n          } else setError(error.toString());\r\n        });\r\n    }\r\n  }, [convertURL]);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const calculateConvertion = () => {\r\n    let convertionCount = 0;\r\n\r\n    for (let i = 0; i < objNameArr.length; i++) {\r\n      if (objNameArr[i] === `${from}_${to}`) {\r\n        convertionCount = objValuesArr[i];\r\n      }\r\n    }\r\n\r\n    setConvertion((fromAmount * convertionCount).toFixed(2));\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateConvertion();\r\n  }, [calculateConvertion]);\r\n\r\n  const componentForm = currenciesLoaded ? (\r\n    <Form\r\n      currencies={currencies.results}\r\n      from={from}\r\n      to={to}\r\n      setFrom={setFrom}\r\n      setTo={setTo}\r\n      fromAmount={fromAmount}\r\n      setConvertionObjectLoaded={setConvertionObjectLoaded}\r\n      setFromAmount={setFromAmount}\r\n      calculateConvertion={calculateConvertion}\r\n      convertion={convertion}\r\n    />\r\n  ) : (\r\n    <h2>{error}</h2>\r\n  );\r\n\r\n  const componentChangeButton = currenciesLoaded ? (\r\n    <ChangeButton from={from} to={to} setFrom={setFrom} setTo={setTo} />\r\n  ) : null;\r\n\r\n  const componentInfo = convertionObjectLoaded ? (\r\n    <Info Values={objValuesArr} Name={objNameArr} from={from} to={to} />\r\n  ) : null;\r\n\r\n  const componentConvertButton = currenciesLoaded ? (\r\n    <ConvertButton\r\n      apiKey={apiKey}\r\n      from={from}\r\n      to={to}\r\n      calculateConvertion={calculateConvertion}\r\n      setConvertURL={setConvertURL}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <Container className=\"mh-100vh\" fluid>\r\n      <Row className=\"mh-100vh\">\r\n        <Col className=\"my-auto\">\r\n          <Row>\r\n            <Col className=\"text-center mb-3\">\r\n              <h1>Currency converter</h1>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"justify-content-center mb-3\">\r\n            <Col\r\n              style={{ maxWidth: \"15.5rem\", minWidth: \"15.5rem\" }}\r\n              xs=\"7\"\r\n              sm=\"5\"\r\n              md=\"3\"\r\n              xl=\"2\"\r\n              className=\"pl-2 pr-21\"\r\n            >\r\n              {componentForm}\r\n            </Col>\r\n            <Col className=\"p-0 m-0 mb-1\" xs=\"auto\">\r\n              {componentChangeButton}\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"text-center mb-3\">{componentConvertButton}</Col>\r\n          </Row>\r\n          <Row>{componentInfo}</Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/index.css\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}